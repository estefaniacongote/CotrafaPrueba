repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

tasks.withType(JavaCompile){
    options.encoding 'UTF-8'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.60")
    }
}

ext {
    serenityVersion = '2.0.64'
    serenityCucumberVersion = '1.9.43'
}
test {
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
}

dependencies {

    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.22.0'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    implementation group: 'net.serenity-bdd', name: 'serenity-core', version: '3.2.4'
    implementation group: 'net.serenity-bdd', name: 'serenity-junit', version: '3.2.4'
    implementation(group: 'net.serenity-bdd', name: 'serenity-cucumber', version: '3.2.0')
    implementation(group: 'net.serenity-bdd', name: 'serenity-screenplay', version: '3.2.1')
    implementation(group: 'net.serenity-bdd', name: 'serenity-screenplay-webdriver', version: '3.2.1')
    implementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: '3.2.4'
    implementation group: 'net.serenity-bdd', name: 'serenity-gradle-plugin', version: '2.4.34'
    implementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: '3.2.5'
    implementation group: 'net.serenity-bdd', name: 'serenity-reports', version: '3.2.5'
    testImplementation group: 'org.testng', name: 'testng', version: '6.14.3'
    implementation group: 'org.json', name: 'json', version: '20200518'
    implementation group: 'dk.kewill.thirdpartymavencentral', name: 'jt400-full', version: '7.10'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.48'
    implementation group: 'org.jdbi', name: 'jdbi', version: '2.78'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.5'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'
    implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.0.6'

}

test {
    maxParallelForks = Runtime.runtime.availableProcessors()
    systemProperty "file.encoding", "utf-8"
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
    systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
    systemProperty "environment", System.getenv("environment")
    systemProperty "webdriver.driver", System.getProperty("webdriver.driver")
    systemProperty "webdriver.chrome.driver", System.getProperty("webdriver.chrome.driver")
    systemProperty "webdriver.remote.url", System.getProperty("webdriver.remote.url")
    systemProperty "webdriver.remote.driver", System.getProperty("webdriver.remote.driver")
    systemProperty "webdriver.remote.os", System.getProperty("webdriver.remote.os")
}

tasks.withType(Test) {
    maxParallelForks = Runtime.runtime.availableProcessors()
}
gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)
